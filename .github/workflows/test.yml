# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13]
        python-version: [3.8, '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo "version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")" >> $GITHUB_OUTPUT

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        shell: bash
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        shell: bash
        run: |
          pip install --no-cache-dir -r requirements.txt
          pip install --no-cache-dir coverage pytest codecov-cli>=0.4.1

      - name: Run unittest
        shell: bash
        run: coverage run -m unittest discover -s ./tests -p 'test_*.py'

      - name: Statistics
        if: success()
        run: |
          coverage report -i
          coverage xml -i

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        if: always()
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittest
          name: coverage-report
          fail_ci_if_error: false

  docs:
    name: Test docs build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('docs/requirements_docs.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y pandoc
          python -m pip install --upgrade pip
          pip install -r docs/requirements_docs.txt
        shell: bash

      - name: Build sphinx documentation
        run: |
          cd docs
          make clean
          make html --debug --jobs 2 SPHINXOPTS="-W"

      - name: Upload built docs
        uses: actions/upload-artifact@v4
        with:
          name: docs-results
          path: docs/build/html/
        if: success()
